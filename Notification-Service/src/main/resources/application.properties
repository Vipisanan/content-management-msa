spring.application.name=Notification-Service
server.port=8083
spring.datasource.url=jdbc:postgresql://localhost:5432/notification_service_db
spring.datasource.username=postgres
spring.datasource.password=1234
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.group-id=notification-service-group

# Map producer class to consumer class
spring.kafka.consumer.properties.spring.json.type.mapping=com.vp.content_service.dto.ContentEvent:com.vp.notification_service.kafka.ContentEvent

# Trust packages (adjust if you want more restrictive)
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# Optional: set default type if no class info sent
# spring.kafka.consumer.properties.spring.json.value.default.type=com.vp.notification_service.kafka.ContentEvent

